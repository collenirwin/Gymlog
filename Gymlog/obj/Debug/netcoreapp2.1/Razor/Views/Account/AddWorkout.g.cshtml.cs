#pragma checksum "C:\Users\epere\OneDrive\Gymlog\Gymlog\Views\Account\AddWorkout.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c0de59ac40c811ae946c8a7cab361ba439443dc6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Account_AddWorkout), @"mvc.1.0.view", @"/Views/Account/AddWorkout.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Account/AddWorkout.cshtml", typeof(AspNetCore.Views_Account_AddWorkout))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\epere\OneDrive\Gymlog\Gymlog\Views\_ViewImports.cshtml"
using Gymlog;

#line default
#line hidden
#line 2 "C:\Users\epere\OneDrive\Gymlog\Gymlog\Views\_ViewImports.cshtml"
using Gymlog.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c0de59ac40c811ae946c8a7cab361ba439443dc6", @"/Views/Account/AddWorkout.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"221afc43e64317c4f1fa0904c7b9307c191dcbcb", @"/Views/_ViewImports.cshtml")]
    public class Views_Account_AddWorkout : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Add_Workout.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(121, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(130, 25, true);
            WriteLiteral("<!DOCTYPE html>\r\n<html>\r\n");
            EndContext();
            BeginContext(155, 296, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "262c0d900ca240f39ae6ead0e277ce93", async() => {
                BeginContext(161, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(167, 54, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2b0762c2d5364bdca47e6d813607380a", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(221, 223, true);
                WriteLiteral("\r\n    <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/vue@2.5.17/dist/vue.js\"></script>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(451, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(455, 1351, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "279afdd51bcc4b8ca7d747e524c161d2", async() => {
                BeginContext(461, 1338, true);
                WriteLiteral(@"

    <h2>In-Progress</h2>
    <h3>An Exercise</h3>
    <div class=""row"">
        <table>
            <tr>
                <th></th>
                <th>Set</th>
                <th>Reps</th>
                <th>Rest</th>
            </tr>
            <tr v-for=""(row,k) in row_info"" :key=""k"">
                <td scope=""row"">
                    <i class=""fa fa-trash"" v-on:click=""delRow(k,row)""></i>
                </td>
                <td>
                    <input class=""form-control"" type=""number"" v-model=""row.set_num"" readonly=""readonly"" />
                </td>
                <td>
                    <input class=""form-control"" type=""text"" v-model=""row.num_of_reps"" />
                </td>
                <td>
                    <input class=""form-control"" type=""text"" v-model=""row.rest_time"" />
                </td>
            </tr>
        </table>
        <button type=""button"" class=""btn btn-info"" v-on:click=""addTable"">
            <i class=""fa fa-plus""></i>
           ");
                WriteLiteral(@" Add Exercise
        </button>
        <button type='button' class=""btn btn-info"" v-on:click=""addRow"">
            <i class=""fa fa-plus""></i>
            Add Row
        </button>
        <div class=""row"" v-for=""tab in tables"">
            <div v-html=""tab.table""></div>



        </div>
    </div>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1806, 3020, true);
            WriteLiteral(@"

<script>
    let data = new Vue({
        el: "".row"",
        data: {
            tables: [{
                table: ''
            }],
            set_number: 2,
            row_info: [{
                set_num: ""1"",
                num_of_reps: """",
                rest_time: """",
                comment:""""
            }],
        },
        methods: {
            addRow: function () {
                this.row_info.push({
                    set_num: this.set_number++,
                    num_of_reps: """",
                    rest_time: """",
                    comment:""""
                });
            },
            delRow: function (k,row) {
                let row_index = this.row_info.indexOf(row);
                if (row_index > 0) {
                    this.row_info.splice(row_index, 1);
                }
                this.set_number = 1;
                for (let i in this.row_info) {
                    console.log(i);
                    this.row_info[i].set_num = ");
            WriteLiteral(@"this.set_number;
                    this.set_number++;
                }
            },
            addTable: function () {
                this.tables.push({
                    table: '\
                    < div class= ""row"" > \
                        <table>\
                            < tr >\
                                <th></th>\
                                <th>Set</th>\
                                <th>Reps</th>\
                                <th>Rest</th>\
                            </tr>\
                            < tr v-for= ""(row,k) in row_info"" : key=""k"" >\
                                <td scope=""row"">\
                                    <i class=""fa fa-trash"" v-on: click=""delRow(k,row)""></i>\
                                </td >\
                                <td>\
                                    <input class=""form-control"" type=""number"" v-model=""row.set_num"" readonly=""readonly"" />\
                                </td>\
                       ");
            WriteLiteral(@"         <td>\
                                    <input class=""form-control"" type=""text"" v-model=""row.num_of_reps"" />\
                                </td>\
                                <td>\
                                    <input class=""form-control"" type=""text"" v-model=""row.rest_time"" />\
                                </td>\
                            </tr >\
                        </table >\
                        <button type=""button"" class=""btn btn-info"" v-on: click=""addRow"">\
                            <i class=""fa fa-plus""></i>\
                                Add Row\
                        </button>\
                </div>'

                });
            }
        }
    });

</script>
<!--<script type=""text/javascript"">
        function addTable() {
    var html = ""<table><tr><td>123</td><td>456</td></tr></table>"";
        document.getElementById(""addtable"").innerHTML = html;
    }
</script> -->

</html>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
