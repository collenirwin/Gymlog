#pragma checksum "C:\Users\lance\Documents\Programs\Gymlog\Gymlog\Gymlog\Views\Account\AddWorkout.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8b0a3c8d4de4132297ffa5592e7f3132748e8daf"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Account_AddWorkout), @"mvc.1.0.view", @"/Views/Account/AddWorkout.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Account/AddWorkout.cshtml", typeof(AspNetCore.Views_Account_AddWorkout))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\lance\Documents\Programs\Gymlog\Gymlog\Gymlog\Views\_ViewImports.cshtml"
using Gymlog;

#line default
#line hidden
#line 2 "C:\Users\lance\Documents\Programs\Gymlog\Gymlog\Gymlog\Views\_ViewImports.cshtml"
using Gymlog.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8b0a3c8d4de4132297ffa5592e7f3132748e8daf", @"/Views/Account/AddWorkout.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"221afc43e64317c4f1fa0904c7b9307c191dcbcb", @"/Views/_ViewImports.cshtml")]
    public class Views_Account_AddWorkout : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Add_Workout.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 25, true);
            WriteLiteral("<!DOCTYPE html>\r\n<html>\r\n");
            EndContext();
            BeginContext(25, 393, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cd93267f128b4bfea9c037dfee08d357", async() => {
                BeginContext(31, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(37, 54, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d246ac4200b548a69cea1ad17b6b7393", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(91, 320, true);
                WriteLiteral(@"
    <script type=""text/javascript"" src=""https://cdn.jsdelivr.net/npm/vue@2.5.17/dist/vue.js""></script>
    <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"" />
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js""></script>

");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(418, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(422, 1299, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5ba70c3ca414d1c90b5d5cf3321e2fb", async() => {
                BeginContext(428, 1286, true);
                WriteLiteral(@"
    <h1> In-Progress</h1>
    <div class=""temp"">

        <temp></temp>
        <temp></temp>
        <temp></temp>

        <button class=""btn btn-primary"">
            <i class=""fa fa-plus""></i> Add Exercise
        </button>
    </div>


    <!-- Button HTML (to Trigger Modal) -->
    <a href=""#myModal"" role=""button"" class=""btn btn-large btn-primary pull-right"" data-toggle=""modal"">Add Exercise</a>

    <!-- Modal HTML -->
    <div id=""myModal"" class=""modal fade"">
        <div class=""modal-dialog"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>
                    <h4 class=""modal-title"">Add an Exercise</h4>
                </div>
                <div class=""modal-body"">
                    <p>Do you want to save changes you made to document before closing?</p>
                </div>
                <div class=""modal-footer"">
     ");
                WriteLiteral(@"               <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>
                    <button type=""button"" class=""btn btn-primary"">Add</button>
                </div>
            </div>
        </div>
    </div>
    </div>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1721, 3386, true);
            WriteLiteral(@"

<script>
    $(function () {
        $('#myModal').modal({
            backdrop: true,
            show: false
        });
    });
    $('#myModal').modal('show');
    $('#myModal').modal('hide');


</script>
<script>
    Vue.component('temp', {
        template: '\
                    <div> \
                        <table v-for=""(name,i) in rows.slice(0,1)"" :key=""i"">\
                        <tr><input class=""form-control"" type=""text"" v-model=""name.exercise"" placeholder=""Exercise Name""/></tr>\
                            <tr>\
                                <th></th>\
                                <th>Set</th>\
                                <th>Reps</th>\
                                <th>Rest</th>\
                                <th>Comments</th>\
                            </tr>\
                            <tr v-for= ""(row,k) in rows"" :key=""k"">\
                                <td scope=""row"">\
                                    <i class=""fa fa-trash"" v-on:click=""");
            WriteLiteral(@"delRow(k,row)""></i>\
                                </td >\
                                <td>\
                                    <input class=""form-control"" type=""number"" v-model=""row.set_num"" readonly=""readonly""/>\
                                </td>\
                                <td>\
                                    <input class=""form-control"" type=""text"" v-model=""row.num_of_reps"" placeholder=""10""/>\
                                </td>\
                                <td>\
                                    <input class=""form-control"" type=""text"" v-model=""row.rest_time"" placeholder=""1:30""/>\
                                </td>\
                                <td>\
                                    <input class=""form-control"" type=""text"" v-model=""row.comments""/>\
                                </td>\
                            </tr>\
                        </table>\
                        <button type=""button"" class=""btn btn-info"" v-on:click=""addRow"">\
           ");
            WriteLiteral(@"                 <i class=""fa fa-plus""></i>\
                                Add Row\
                        </button>\
                </div>',
        data() {
            return {
                set_number: 2,
                rows: [{
                    exercise: ""exercise"",
                    set_num: 1,
                    num_of_reps: """",
                    rest_time: """",
                    comments: """"
                }]
            }
        },
        methods: {
            addRow: function () {
                this.rows.push({
                    exercise: ""exercise"",
                    set_num: this.set_number++,
                    num_of_reps: """",
                    rest_time: """",
                    comments: """"
                });
            },
            delRow: function (k, row) {
                let row_index = this.rows.indexOf(row);
                if (row_index > 0) {
                    this.rows.splice(row_index, 1);
                }
           ");
            WriteLiteral(@"     this.set_number = 1;
                for (let i in this.rows) {
                    this.rows[i].set_num = this.set_number;
                    this.set_number++;
                };
            }

        }
    });

    let temp = new Vue({
        el: "".temp"",


    });

</script>

</html>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
